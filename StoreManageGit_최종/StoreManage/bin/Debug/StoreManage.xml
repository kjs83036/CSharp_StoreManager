<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StoreManage</name>
    </assembly>
    <members>
        <member name="M:StoreManage.Crud.Create_MS``1(System.String,``0)">
            <summary>
            <para>기능 : insertQuery를 sqlCommand를 통해 Execute함</para>
            <para>분기 : </para>
            <para>로직 : 1. query에서 column 추출</para>
            <para>로직 : 2. t에서 프로퍼티 추출</para>
            <para>로직 : 3. tempCrudFunc.setValues메서드로 t에서 value 추출</para>
            <para>로직 : 4. tempCrudFunc.setSqlCommad메서드로 sqlcommand.parameter에 value 세팅</para>
            <para>로직 : 5. sqlTran메서드로 트랜잭션, 실행, 커밋</para>
            <para>로직 : 6. result(행수) 반환</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="t">t는 프로퍼티를 갖고 있어야함</param>
            <returns></returns>
        </member>
        <member name="M:StoreManage.Crud.Create_MySql``1(System.String,``0)">
            <summary>
            <para>기능 : insertQuery를 sqlCommand를 통해 Execute함</para>
            <para>분기 : </para>
            <para>로직 : 1. query에서 column 추출</para>
            <para>로직 : 2. t에서 프로퍼티 추출</para>
            <para>로직 : 3. tempCrudFunc.setValues메서드로 t에서 value 추출</para>
            <para>로직 : 4. tempCrudFunc.setSqlCommad메서드로 sqlcommand.parameter에 value 세팅</para>
            <para>로직 : 5. sqlTran메서드로 트랜잭션, 실행, 커밋</para>
            <para>로직 : 6. result(행수) 반환</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="t">t는 프로퍼티를 갖고 있어야함</param>
            <returns></returns>
        </member>
        <member name="M:StoreManage.StoreManage.StoreManage_Load(System.Object,System.EventArgs)">
            <summary>
            <para>종류 : Form Load 메서드</para>
            <para>기능 : 각종 초기세팅</para>
            <para>로직 : 1. 좌상단 텍스트에 현재시간 할당</para>
            <para>       2. Login으로 부터 받은 employee객체를 활용하여 우상단 텍스트에 이름 및 권한 할당</para>
            <para>       3. 매장테이블에서 매장 및 관리자 컬럼을 가져오는 query를 통해 Crud.ReadToGrid를 활용하여 dataset을 얻고 좌측 테이블에 tempFuncForWinform.setDataGridView 메서드를 통해 할당</para>
            <para>       4. 테이블에 checkBoxColumn추가, readonly 설정, cellSelection제거, </para>
            <para>       5. dateTimePicker 현재시간으로 초기화</para>
            <para>       6. textBox 가운데 정렬 및 폰트 설정</para>
            <para>       7. 주소검색, 직원검색 버튼 비활성화</para>
            <para>       8. 라벨 및 dateTimePicker폰트 설정</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonDeleteStore_Click(System.Object,System.EventArgs)">
            <summary>
            <para>종류 :  버튼클릭 이벤트</para>
            <para>기능 :  매장 삭제</para>
            <para>진입 :  1. 삭제 체크된 매장List.Count() > 0</para>
            <para>분기 :  1. 메시지 박스 Yes클릭</para>
            <para>        2. queryResult > 0</para>
            <para>로직 :  1. 체크된 매장수 0보다 클 경우 진입</para>
            <para>            2. 메시지 박스에 삭제 체크된 매장이름을 띄우며 재확인 요청</para>
            <para>                3. 승인 시 매장List를 돌며 반복 삭제 진행</para>
            <para>                4. 해당 매장 이름을 이용하여 queryRead와 queryDelete를 만들고 Crud.Read를 통해 조회, 그결과를 바탕으로 Crud.Delete를 진행</para>
            <para>                    5. Crud.Delete반환 결과에 따라 성공시 매장이름 기록, 실패시 이전에 성공한 매장이름을 보여주며 실패 메시지박스 출력. 그 후 readStoreTablePattern메서드를 활용하여 테이블 새로고침 후 return</para>
            <para>                6. 실패가 없을시 삭제에 성공한 모든 매장이름을 메시지 박스로 출력</para>
            <para>                7. readStoreTablePattern메서드를 활용하여 테이블 새로고침</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonAddStore_Click(System.Object,System.EventArgs)">
            <summary>
            <para>종류 :  버튼클릭 이벤트</para>
            <para>기능 :  매장 등록</para>
            <para>진입 :  1. 메시지 박스 Yes클릭</para>
            <para>분기 :  1. 등록버튼 텍스트 ==&quot;등록&quot;</para>
            <para>        2. queryResult > 0</para>
            <para>로직 :  1. 메시지박스 재확인 요청 </para>
            <para>            2. 승인시 저장된 st_code 비움</para>
            <para>            3. 버튼 텍스트가 &quot;등록&quot;분기</para>
            <para>                4.직원검색, 주소검색버튼 buttonEnableToggle메서드로 토글</para>
            <para>                5. 지출 테이블과 직원 테이블 데이터 비움</para>
            <para>                6. 텍스트 박스와 타임피커 쓰기로 readonlyTextBoxAndDatetimePicker메서드를 활용하여 바꿈</para>
            <para>                7. clearDatetimePickerAndTextBox메서드를 활용하여 텍스트 박스와 타임 피커 초기화</para>
            <para>                8. 버튼 텍스트 &quot;적용&quot;으로 변경 후 return</para>
            <para>            9. Rownum이 필요할시 queryRead와 Crud.read를 통해 얻음</para>
            <para>            10. store객체에 입력받은 값 모두 할당</para>
            <para>            11. queryCreate와 crud.insert를 통해 저장</para>
            <para>            12. queryResult > 0 분기</para>
            <para>                13. buttonEnableToggle메서드를 활용하여 버튼 비활성</para>
            <para>                14. 성공 메시지박스 출력</para>
            <para>                15. readStoreTablePattern활용하여 테이블 초기화</para>
            <para>                16. 버튼 텍스트 &quot;등록&quot;으로 변경</para>
            <para>                17. readonlyTextBoxAndDatetimePicker를 통해 텍스트 박스 및 타임피커 readonly</para>
            <para>                18. clearDatetimePickerAndTextBox를 통해 초기화</para>
            <para>            19. 실패 메시지 박스 출력</para>
            <para>            20. clearDatetimePickerAndTextBox로 초기화</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonLogout_Click(System.Object,System.EventArgs)">
            <summary>
            <para>종류 :  버튼 클릭 이벤트</para>
            <para>기능 :  로그아웃</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. StoreManage Form 안보이게</para>
            <para>        2. Login Form 보이게</para>
            <para>        3. 저장된 데이터 (employee, st_code, seletedMonth, setCheckedStoreName) 삭제</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonSelectAddress_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  주소 검색을 위한 패널을 띄움</para>
            <para>진입 :  </para>
            <para>분기 :  1. 버튼 텍스트 ==&quot;검색&quot;</para>
            <para>로직 :  1. if 버튼 텍스트 ==&quot;검색&quot;</para>
            <para>            2. 주소검색 패널 보임</para>
            <para>            3. 버튼 텍스트 &quot;닫기&quot;로 변경</para>
            <para>        4. 주소 검색 패널 안보이게</para>
            <para>        5. 버튼 텍스트 &quot;검색&quot;으로 변경</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonSelectExpenseDetail_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  자세히 버튼 클릭시 지출상세 패널 보이도록</para>
            <para>진입 :  </para>
            <para>분기 :  1. 버튼텍스트 ==&quot;자세히&quot;  &amp; &amp; 선택월이 !=null</para>
            <para>로직 :  1. if 버튼텍스트 ==&quot;자세히&quot;  &amp; &amp; 선택월이 !=null</para>
            <para>            1. 상세 지출 패널 보이게</para>
            <para>            2. queryRead와 crud.readToGrid를 지출상세 dataset을 얻음</para>
            <para>            3. 컬럼이름 한글로 할당</para>
            <para>            4. tempFuncForWinform.setDataGridView활용하여 데이터 바인딩</para>
            <para>            5. 날자 컬럼 포맷형식 변경</para>
            <para>            6. 버튼 텍스트 &quot;닫기&quot;로 변경</para>
            <para>        7. 버튼 텍스트 &quot;자세히&quot;로 변경</para>
            <para>        8. 상세 지출 패널 안보이게</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonUpdate_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  매장 업데이터</para>
            <para>진입 :  메시지 박스 yes클릭</para>
            <para>분기 :  1. 버튼 텍스트 == &quot;변경&quot;</para>
            <para>        2. queryResult >0</para>
            <para>로직 :  1. if 버튼 텍스트 == &quot;변경&quot;</para>
            <para>            2. readonlyTextBoxAndDatetimePicker</para>
            <para>            3. buttonEnableToggle</para>
            <para>            4. 버튼 텍스트 &quot;적용&quot;으로 변경</para>
            <para>            5. return</para>
            <para>        6. 매장 코드를 기준으로 queryRead &amp; crud.Read를 통해 st_table 객체 생성</para>
            <para>        7. st_table객체에 변경된 값 할당</para>
            <para>        8. 매장 코드를 기준 queryUpdate &amp; crud.Update 를 진행</para>
            <para>        9. if queryResult >0</para>
            <para>            10. buttonEnableToggle</para>
            <para>            11. readonlyTextBoxAndDatetimePicker</para>
            <para>            12. 성공 메시지박스</para>
            <para>            13. readStoreTablePattern</para>
            <para>            14. 버튼 텍스트 &quot;변경&quot;으로 변경</para>
            <para>        15. 메시지 박스 &quot;실패&quot;</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.dataGridViewStore_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  매장 테이블 셀클릭시 상세정보 조회</para>
            <para>진입 :  e.rowindex >=0 &amp;&amp; e.columnindex >=1</para>
            <para>분기 :  </para>
            <para>로직 :  1. resetToDefault</para>
            <para>        2. readonlyTextBoxAndDatetimePicker</para>
            <para>        3. buttonEnableToggle</para>
            <para>        4. 셀클릭시 row의 매장명 selectedStoreName에저장</para>
            <para>        5. selectedStoreName를 기준으로 queryRead&amp;crud.Read를 통해 st_table객체 생성</para>
            <para>        6. st_table정보를 각 테이블박스 및 타임피커에 할당</para>
            <para>        7. st_code에 st_table.st_code 할당</para>
            <para>        7. st_code를 기준으로 queryGroupby&amp;crud.ReadToGrid로 지출dataset얻음</para>
            <para>        8. dataset의 컬럼명을 한글로 변경</para>
            <para>        9. No컬럼 삽입 및 증식 방지 처리</para>
            <para>        10. tempFuncForWinform.setDataGridView</para>
            <para>        11. dataset.table[0].row.count()만큼 NO 순차 할당 및 readonly</para>
            <para>        12. st_code를 기준으로 queryRead&amp;crud.ReadToGrid로 직원dataset얻음</para>
            <para>        13. 직원수 row.count()로 파악</para>
            <para>        14. tempFuncForWinform.setDataGridView</para>
            <para>        15. calculateLeftDate</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonSelectEmployee_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  직원조회 패널 보이게</para>
            <para>진입 :  </para>
            <para>분기 :  1. 버튼 텍스트 ==&quot;직원열기&quot;</para>
            <para>로직 :  1. if 버튼텍스트 == &quot;직원열기&quot;</para>
            <para>            2. 직원 선택  패널 보이게</para>
            <para>            3. 버튼 텍스트 를 &quot;직원닫기&quot;로 변경</para>
            <para>        4. 직원 선택  패널 안보이게</para>
            <para>        5. 버튼 텍스트 를 &quot;직원열기&quot;로 변경</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonEmployeeManageTemp_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  직원관리 패널 보이게</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. panel탑의 중간 매장이름 가리기</para>
            <para>        2. 직원관리 패널 보이게</para>
            <para>        3. 다른 패널 안보이게</para>
            <para>        4. buttonColorChange메소드를 통해 직원관리 버튼은 회색 그외에는 흰색</para>
            <para>        5. 유저컨트롤을 직원관리 패널에 add</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonStoreManageTemp_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  매장관리 화면으로 이동</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. panel탑의 중간 매장이름 가리기</para>
            <para>        2. 다른 패널 안보이게</para>
            <para>        3. buttonColorChange</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.dataGridViewSelectEmployee_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  직원이름 클릭시 텍스트박스에 적용</para>
            <para>진입 :  e.RowIndex >= 0 &amp;&amp; e.ColumnIndex >= 0</para>
            <para>분기 :  </para>
            <para>로직 :  1. 클릭한 테이블의 셀의 &quot;이름&quot;을 관리자 이름 텍스트 박스에 적용</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.dataGridViewExpense_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  지출 테이블에서 선택된 월 저장</para>
            <para>진입 :  e.RowIndex >= 0 &amp;&amp; e.ColumnIndex >= 0</para>
            <para>분기 :  </para>
            <para>로직 :  1. 선택된 테이블의 &quot;월&quot;을 selectedMonth에 저장</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.dataGridViewStore_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  매장테이블의 check박스 체크 상태 저장</para>
            <para>진입 :  e.RowIndex >= 0 &amp;&amp; e.ColumnIndex >=0 &amp;&amp; (sender as DataGridView).CurrentCell is DataGridViewCheckBoxCell)</para>
            <para>분기 :  1. 테이블 에서 선택된 체크박스 값이 변했고 그값 == ture</para>
            <para>로직 :  1. if 테이블 에서 선택된 체크박스 값이 변했고 그값 == ture</para>
            <para>            2. 선택된 행의 &quot;매장명&quot; setCheckedStroeName에 추가</para>
            <para>        3. 선택된 행의 &quot;매장명&quot; setCheckedStroeName에 삭제</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.readonlyTextBoxAndDatetimePicker(System.Boolean)">
            <summary>
            <para>기능 :  텍스트 박스와 타임피커 색 및 readonly 변경</para>
            <para>진입 :  </para>
            <para>분기 :  1. isReadonly == true</para>
            <para>로직 :  1. if isReadonly == true</para>
            <para>            2. 텍스트 박스 읽기전용, 회색배경</para>
            <para>            3. 타임피커 비활성화, 회색배경</para>
            <para>        4. 텍스트 박스 읽기전용 해제, 흰색배경</para>
            <para>        5. 타임피커 활성화, 흰색배경</para>
            </summary>
            <param name="isReadonly"></param>
        </member>
        <member name="M:StoreManage.StoreManage.readStoreTablePattern">
            <summary>
            <para>기능 :  매장 테이블 불러오기 및 readonly 적용</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. queryRead&amp;Crud.Read 를 통해 매장 DataSet 얻음</para>
            <para>        2. dataset의 컬럼명 한글로 변경</para>
            <para>        3. tempFuncForWinform.setDataGridView</para>
            <para>        4. check박스 제외 하고 읽기 전용 설정</para>
            <para>        5. setCheckedStoreName 클리어</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.clearDatetimePickerAndTextBox">
            <summary>
            <para>기능 :  타임피커 및 텍스트 박스 초기화</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 타임 피커배열을 돌며 현재 날짜 할당</para>
            <para>        2. 텍스트박스 배열을 돌며 &quot;&quot;할당</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.textBoxSetting">
            <summary>
            <para>기능 :  텍스트 박스 가운데정렬 및 폰트설정</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 텍스트 가운데 정렬</para> 
            <para>        2. 폰트 나눔고딕 설정</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.labelSetting">
            <summary>
            <para>기능 :  라벨 폰트 설정</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 폰트 나눔고딕으로 설정</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.dateTimePickerSetting">
            <summary>
            <para>기능 :  타임피커 폰트 설정</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 타임피커 폰트 나눔고딕</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.buttonEnableToggle(System.Boolean,System.Windows.Forms.Button[])">
            <summary>
            <para>기능 :  버튼 배열 활성 비활성 토글</para>
            <para>진입 :  </para>
            <para>분기 :  1. isSelectable == true</para>
            <para>로직 :  1. if isSelectable == true</para>
            <para>            2. 버튼 배열 돌며 버튼 활성화</para>
            <para>        3. 버튼배열 돌며 버튼 비활성화</para>
            </summary>
            <remarks>지금은 직원열기, 주소검색 버튼에만 쓰임</remarks>
            <param name="isSelectable"></param>
            <param name="buttonArray"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonResultManegeTemp_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  실적관리 페이지로 이동</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 매장 코드를 바탕으로 queryRead&amp;Crud.Read 로 st_table 객체 얻음</para>
            <para>        2. st_table.st_name을 상단 중앙 라벨에 할당하고 보이도록 설정</para>
            <para>        3. 실적패널 보이고 다른패널 안보이게</para>
            <para>        4. buttonColorChange</para>
            <para>        5. 유저컨트롤2(실적관리) 실적관리 콘트롤에 더함</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonSelectDoro_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  주소검색</para>
            <para>진입 :  textBoxSelectDoro.Text != &quot;&quot;</para>
            <para>분기 :  </para>
            <para>로직 :  1. 입력된 텍스트를 바탕으로 QueryRead&amp;Crud.readToGrid를 통해 시도, 시군구, 도로명, 우편번호의 DataSet 얻음</para>
            <para>        2. 컬럼을 한글로 변경</para>
            <para>        3. tempFuncForWinform.setDataGridView</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.dataGridViewSelectDoro_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  검색된 주소 클릭시 텍스트 박스에 할당</para>
            <para>진입 :  e.RowIndex >= 0 &amp;&amp; e.ColumnIndex >= 0</para>
            <para>분기 :  </para>
            <para>로직 :  1. 클릭된 행의 &quot;우편번호&quot;, &quot;시도&quot;, &quot;시군구&quot;, &quot;도로명&quot; 할당</para>
            <para>        2. clearPanelSelectDoro</para>
            <para>        3. 버튼 텍스트 &quot;검색&quot;으로 변경</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.clearPanelSelectDoro">
            <summary>
            <para>기능 :  주소 검색 패널 비우고 안보이게 함</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 검색된 주소 테이블 비우기</para>
            <para>        2. 주소 패널 안보이게</para>
            <para>        3. 도로 검색 텍스트 박스 초기화</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.resetToDefault">
            <summary>
            <para>기능 :  각종 버튼 및 패널 기본값으로 변경</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 4종 버튼 값 초기화</para>
            <para>        2. 주소, 직원 패널 안보이게</para>
            <para>        3. clearPanelSelectDoro</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.panelStoreName_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            <para>기능 :  매장 텍스트 박스에 외곽선색을 넣기위한 paint이벤트</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. drawTextBoxBorder</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.panelAdminName_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            <para>기능 :  관리자 텍스트 박스에 외곽선색을 넣기위한 paint이벤트</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  drawTextBoxBorder</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.calculateLeftDate">
            <summary>
            <para>기능 :  관리비 날짜와 현재날짜를 통해 남은 날짜 계산</para>
            <para>진입 :  </para>
            <para>분기 :  1. 현재 달 == 관리바 달</para>
            <para>        2. 현재 일 == 관리비 일</para>
            <para>        3. 현재 일 &lt; 관리비 일</para>
            <para>        </para>
            <para>로직 :  1. if 현재 달 == 관리바 달</para>
            <para>            2. if 현재 일 == 관리비 일</para>
            <para>                3. 남은 날은 0</para>
            <para>            4. if 현재 일 &lt; 관리비 일</para>
            <para>                5. 남은날은 관리비 일 - 현재 일</para>
            <para>            6. 남은날은 현재달의 날짜 - 현재 날짜 + 지난 달의 날짜</para>
            <para>        7. 남은날은 (현재달의 날짜 - 현재 날짜 + 지난 달의 날짜)%30</para>
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.dateTimePickerManagementExpense_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  관리비 날짜 변경시 남은 날짜 변경</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. calculateLeftDate</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.StoreManage.buttonColorChange(System.Object)">
            <summary>
            <para>기능 :  버튼 색 변경</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 버튼 배열 돌며 배경 흰색</para>
            <para>로직 :  2. 선택된 버튼은 회색</para>
            </summary>
            <remarks>현재 왼쪽에 매뉴 버튼 에만 적용</remarks>
            <param name="sender"></param>
        </member>
        <member name="M:StoreManage.StoreManage.drawTextBoxBorder(System.Object,System.Windows.Forms.PaintEventArgs,System.Windows.Forms.TextBox)">
            <summary>
            <para>기능 :  텍스트 박스 외곽선 색주기</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 매개변수sender를 패널로 캐스트</para>
            <para>로직 :  2. 텍스트 박스의 외곽선은 없음으로</para>
            <para>로직 :  3. 매개변수 e.Graphics의 DrawRectangle(pen, rectangle)를 통해 텍스트 박스 외곽선 그림(좌표는 텍스트박스 꼭지점 +_@)</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <param name="textbox"></param>
        </member>
        <member name="F:StoreManage.StoreManage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:StoreManage.StoreManage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:StoreManage.StoreManage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:StoreManage.Login.buttonConfirm_Click(System.Object,System.EventArgs)">
            <summary>
            <para>종류 : 버튼 클릭 이벤트 메소드</para>
            <para>기능 : id, pass일치시 로그인</para>
            <para>로직 : 입력받은 id를 기준으로 Query작성, Crud클래스의 Read_MySql을 통해 db로 부터  employee 객체를 얻음</para>
            <para>       db로 부터 얻은 employee 객체의 정보를 바탕으로 id와 pass 일치 확인</para>
            <para>       일치시 로그인, 불일치시 로그인 불가 메시지 박스 출력</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.Login.textBox_Click(System.Object,System.EventArgs)">
            <summary>
            id 텍스트 클릭시 text삭제
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:StoreManage.Login.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:StoreManage.Login.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:StoreManage.Login.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="M:StoreManage.Program.Main">
            <summary>
            해당 애플리케이션의 주 진입점입니다.
            </summary>
        </member>
        <member name="M:StoreManage.UserControl1.btn_top_search_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  직원 조회</para>
            <para>진입 :  </para>
            <para>분기 :  1. 입력이 &quot;&quot;</para>
            <para>분기 :  2. dr["st_emp_member"].ToString() != txt_Top_Name.Text</para>
            <para>로직 :  1. sqlQuery.SelectAllFrom_Where_와 DB.DataSetGrid를 통해 DataSet얻음</para>
            <para>로직 :  2. sqlQuery.SelectAllFrom_Where_와 DB.DataSetGrid를 통해 직원 DataSet얻음</para>
            <para>로직 :  3. 매장, 성별, 이름, 생년월일, 주소 외 컬럼 삭제</para>
            <para>로직 :  4. if txt_Top_Name.Text == &quot;&quot;</para>
            <para>로직 :  ----5. 컬럼이름 한글로</para>
            <para>로직 :  ----6. 테이블에 Dataset할당</para>
            <para>로직 :  ----7. 매장 및 NO컬럼 추가</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.btn_enrollment_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  직원 등록</para>
            <para>진입 :  combo_vlaue != &quot;&quot;</para>
            <para>분기 :  1. query결과 DataSet크기가 1이상</para>
            <para>분기 :  2. 마지막에 있는 직원코드의 길이가 1이거나 코드가 없을때</para>
            <para>분기 :  3. 디렉토리가 존재하지 않음</para>
            <para>분기 :  4. 사진경로가 존재함</para>
            <para>분기 :  5. 직원코드가 중복됨</para>
            <para>분기 :  6. query결과 값이 -1이 아님</para>
            <para>로직 :  1. 매장명을 이용하여 매장코드 검출</para>
            <para>로직 :  2. 매장 직원수 검출</para>
            <para>로직 :  3. if 매장직원수 1 > 1</para>
            <para>로직 :  ----4. 마지막직원코드 저장</para>
            <para>로직 :  5. if 마지막에 있는 직원코드의 길이가 1이거나 코드가 없을때</para>
            <para>로직 :  ----6. num + 1 직원코드</para>
            <para>로직 :  7. 직원코드 중 store_code를 잘라낸 후 int화 하여 +1</para>
            <para>로직 :  8. 직원 중복 확인</para>
            <para>로직 :  9. if 디렉토리 존재 x</para>
            <para>로직 :  ----10. 디렉토리 생성</para>
            <para>로직 :  11. 사진 경로 설정</para>
            <para>로직 :  12. if 사진 경로 존재</para>
            <para>로직 :  ----13. 사진 저장</para>
            <para>로직 :  14. if 직원코드 중복 확인</para>
            <para>로직 :  ----15. 직원코드 확인 메시지</para>
            <para>로직 :  16. employee 할당 및 등록</para>
            <para>로직 :  16. DB.insert 결과 != -1</para>
            <para>로직 :  ----16. 성공 메시지</para>
            <para>로직 :  ----17. 확인 버튼 활성화</para>
            <para>로직 :  18. 실패 메시지</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.btn_Cancel_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  취소 버튼</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. Initial</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.btn_Ok_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  데이터 테이블 새로고침</para>
            <para>진입 :  </para>
            <para>분기 :  </para>
            <para>로직 :  1. 매장명을 이용하여 매장코드 검출</para>
            <para>로직 :  2. sqlQuery.SelectAllFrom_Where_와 DB.DataSetGrid를 통해 매장 DataSet 얻음</para>
            <para>로직 :  3. 매장코드 추출</para>
            <para>로직 :  4. 매장코드와 query 를 통해 직원 DataSet얻음</para>
            <para>로직 :  5. 컬럼 추가 및 한글화</para>
            <para>로직 :  6. 등록 버튼 비활성화</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.dataGridView1_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  직원 선택시 상세내역 조회</para>
            <para>진입 :  클릭된 셀위치가 0번째 부터 데이터가 존재하는 위치까지 이면서 확인버튼이나 검색버튼이 눌렀을때 실행</para>
            <para>분기 :  1. 주소와 생년월일이 일치하지 않는 경우</para>
            <para>분기 :  2. 성별 값이 1일 경우</para>
            <para>분기 :  3. 사진 경로가 &quot;&quot;가 아닌 경우</para>
            <para>분기 :  4. 월별 스위치문</para>
            <para>로직 :  1. DB에서 이름이 같은 데이터만 가져옴</para>
            <para>로직 :  2. if 주소와 생년월일이 일치하지 않는 경우</para>
            <para>로직 :  ----3. 해당 행 삭제</para>
            <para>로직 :  4. 불러온 데이터 컨트롤에 할당</para>
            <para>로직 :  5. if 성별이 남자</para>
            <para>로직 :  ----6. 남자 radio 체크</para>
            <para>로직 :  7. if 사진경로 존재</para>
            <para>로직 :  ----8. 예외처리</para>
            <para>로직 :  ----9. 픽쳐박스에 이미지  할당</para>
            <para>로직 :  10. 월별, 일별 실적테이블 초기화</para>
            <para>로직 :  11. query와 DB.DatasetGrid를 통해 실적테이블 얻음</para>
            <para>로직 :  12. 길이 12의 월 배열 생성</para>
            <para>로직 :  13. switch 월</para>
            <para>로직 :  ----14. 각 월에 해당할 경우 +1</para>
            <para>로직 :  15. 배열을 테이블에 할당</para>
            <para>로직 :  16. 31길이 일 배열 생성</para>
            <para>로직 :  16. 배열에 각 일 데이터 할당</para>
            <para>로직 :  17. 배열을 테이블에 할당</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.btn_picture_Add_Click_1(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  사진 추가</para>
            <para>진입 :  </para>
            <para>분기 :  1. 디렉토리 존재하지 않음</para>
            <para>분기 :  2. Dialog OK클릭</para>
            <para>로직 :  1. 패스 설정 및 디렉토리 생성</para>
            <para>로직 :  2. if di.Exists == false</para>
            <para>로직 :  ----3. 디렉토리 생성</para>
            <para>로직 :  4. 디렉토리 생성</para>
            <para>로직 :  5. 파일오픈 Dialog</para>
            <para>로직 :  6.if  Dialog OK</para>
            <para>로직 :  ----7.filepath저장</para>
            <para>로직 :  ----8.picture박스 이미지 할당</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl1.btn_research_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 :  우편번호 검색 버튼</para>
            <para>진입 :  </para>
            <para>분기 :  1. 버튼 텍스트 == &quot;검색&quot;</para>
            <para>로직 :  1. if 버튼 텍스트 == &quot;검색&quot;</para>
            <para>로직 :  ----2. 주소검색 패널 보이게</para>
            <para>로직 :  ----3. 버튼 텍스트 &quot;닫기&quot;</para>
            <para>로직 :  ----return</para>
            <para>로직 :  4. 주소검색 패널 안보이게</para>
            <para>로직 :  5. 버튼 텍스트 &quot;검색&quot;</para>
            <para>로직 :  6. clearPanelSelectDoro</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:StoreManage.UserControl1.components">
            <summary>
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:StoreManage.UserControl1.Dispose(System.Boolean)">
            <summary>
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:StoreManage.UserControl1.InitializeComponent">
            <summary>
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.dataGridViewInit">
            <summary>
            <para>기능 : 실적 입력용 테이블 초기화</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. 10X10 테이블 생성</para>
            <para>로직 : 2. 특정 셀 병합</para>
            <para>로직 : 3. 라벨추가</para>
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.dataGridViewSelectionDateDetail_CellPainting(System.Object,System.Windows.Forms.DataGridViewCellPaintingEventArgs)">
            <summary>
            <para>기능 : 셀 병합용 셀페인트 이벤트</para>
            <para>진입 : </para>
            <para>분기 : 1. e.Columnindex &lt; 0 || e.RowIndex &lt; 0</para>
            <para>분기 : 2. dgv.Cell.Tag == null</para>
            <para>분기 : 3. dgvCell.Tag.Tostring().Corntains("R")</para>
            <para>분기 : 4. dgvCell.Tag.Tostring().Corntains("B")</para>
            <para>로직 : 1. if 로우 혹은 컬럼이 음수</para>
            <para>로직 : ----2. return</para>
            <para>로직 : 3.  if 셀 태그가 null</para>
            <para>로직 : ----4. return</para>
            <para>로직 : 5. if 셀태그가 &quot;R&quot;을 품는 경우</para>
            <para>로직 : ----6. 오른쪽 셀 외각선 없음</para>
            <para>로직 : 7. if 셀태그가 &quot;B&quot;을 품는 경우</para>
            <para>로직 : ----9. 아래쪽 셀 외각선 없음</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.mergeCells(System.Windows.Forms.DataGridViewCell,System.Boolean,System.Boolean)">
            <summary>
            <para>기능 : 셀병합</para>
            <para>진입 : </para>
            <para>분기 : 1. mergeH == true</para>
            <para>분기 : 2. mergeV == true</para>
            <para>로직 : 1. if mergeH == true</para>
            <para>로직 : ----2. 태그에 &quot;R&quot;추가</para>
            <para>로직 : 3. if mergeV == true</para>
            <para>로직 : ----4. 태그에 &quot;B&quot;추가</para>
            </summary>
            <param name="cell">datagridviewcell</param>
            <param name="mergeH">수평병합일 경우 true</param>
            <param name="mergeV">수직병합일 경우 true</param>
        </member>
        <member name="M:StoreManage.UserControl2.panelStoreName_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            <para>기능 : 텍스트 박스 외각선 그리기</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1.storeManage.drawTextBoxBorder </para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.buttonSelectDate_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 : 입력을 포함한 검색결과 테이블로 출력</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. readResultTablePattern</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.dataGridViewSelectDate_CellClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 : 실적 상세 테이블 생성</para>
            <para>진입 : </para>
            <para>분기 : 행은 0이상, 열은 1이상</para>
            <para>로직 : 1. resetToDefault</para>
            <para>로직 : 2. e.RowIndex &gt;= 0 &amp;&amp; e.ColumnIndex &gt;= 1</para>
            <para>로직 : ----3. makeDetailTable</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.dataGridViewSelectDate_CellContentClick(System.Object,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 :  실적테이블 check박스 체크 상태 저장</para>
            <para>진입 :  e.RowIndex >= 0 &amp;&amp; e.ColumnIndex >=0 &amp;&amp; (sender as DataGridView).CurrentCell is DataGridViewCheckBoxCell)</para>
            <para>분기 :  1. 테이블 에서 선택된 체크박스 값이 변했고 그값 == ture</para>
            <para>로직 :  1. if 테이블 에서 선택된 체크박스 값이 변했고 그값 == ture</para>
            <para>        ----2. 선택된 행의 &quot;개통번호&quot; setCheckedResult에 추가</para>
            <para>        ----return</para>
            <para>        3. 선택된 행의 &quot;개통번호&quot; setCheckedResult에 삭제</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.buttonDeleteResult_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 : 선택된 실적 제거 </para>
            <para>진입 : 1. setCheckedResult.Count &gt; 0</para>
            <para>분기 : 1. 메시지 박스 Yes 선택</para>
            <para>분기 : 2. queryResult > 0</para>
            <para>로직 : 1. if 체크된 이름 모두 메시지 박스를 통해 보여주고 Yes선택시 </para>
            <para>로직 : ----2. 반복문을 통해 체크된 실적들을 제거</para>
            <para>로직 : ----3. sqlQuery.SelectAllFrom_Where_와 Crud.Read사용하여 st_emp_result를 얻고 그 st_emp_result를 삭제</para>
            <para>로직 : ----4. 삭제 결과 가 0초과일 경우 삭제 된 결과 메시지로 출력</para>
            <para>로직 : --------5. 삭제 결과 가 0이하일 경우 삭제 된 결과 메시지로 출력 및 삭제 실패 출력</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.buttonUpdateResult_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 : 실적 변경</para>
            <para>진입 : 메시지 박스 Yes 클릭</para>
            <para>분기 : 1. buttonUpdateResult.Text == &quot;변경&quot;</para>
            <para>분기 : ----2. 검색시 항목 경 가능 처리</para>
            <para>분기 : ----3. 변경할 수 없는 항목 처리</para>
            <para>분기 : ----4. 버튼 텍스트 &quot;적용&quot;로 변경</para>
            <para>분기 : ----return</para>
            <para>분기 : 5. sqlQuery.SelectAllFrom_Where_와 crud.Read를 통해 기존 데이터 불러옴</para>
            <para>분기 : 6. 변경사항 st_emp_result에 할당</para>
            <para>분기 : 6. sqlQuery.Update_Set_와 crud.update를 를 통해 변경 적용</para>
            <para>분기 : 7. if 결과가 0 보다 클경우</para>
            <para>분기 : ----8. 성공 메시지박스띄움</para>
            <para>분기 : ----9. readResultTablePattern</para>
            <para>분기 : ----10. 버튼 텍스트 &quot;변경&quot; 적용</para>
            <para>분기 : ----return</para>
            <para>분기 : 11. 실패 메시지</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.buttonCreateResult_Click(System.Object,System.EventArgs)">
            <summary>
            <para>기능 : 실적 등록</para>
            <para>진입 : 등록 메시지 박스 Yes클릭</para>
            <para>분기 : 1. buttonCreateResult.Text == &quot;등록&quot;</para>
            <para>로직 : 1. 버튼 텍스트 == 등록</para>
            <para>로직 : ----2. clearSelectedDetail</para>
            <para>로직 : ----3. cellNotResultDisable</para>
            <para>로직 : ----4. 버튼텍스트 &quot;적용&quot; 으로 변경</para>
            <para>로직 : ----return</para>
            <para>로직 : 5. st_emp_result에 등록사항 할당</para>
            <para>로직 : 6. sqlQuery.InsertInto__Values_ 와 Crud.Create를 사용하여 등록</para>
            <para>로직 : 7. 변경사항이 0 초과 일 경우</para>
            <para>로직 : ----8. 성공 메시지</para>
            <para>로직 : ----9. readResultTablePattern </para>
            <para>로직 : ----10. 버튼 텍스드 &quot;등록&quot;으로 변경 </para>
            <para>로직 : ----11. clearSelectedDetail </para>
            <para>로직 : 12. 실패 메시지 </para>
            <para>로직 : 13. clearSelectedDetail </para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.clearSelectedDetail(System.Boolean)">
            <summary>
            <para>기능 : 실적 상세 테이블 클리어 </para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. sqlquery.SelectAllFrom_Where_과 Crud.Read를 통해 st_table 생성</para>
            <para>로직 : 2. st_table을 통해 combobox보완</para>
            <para>로직 : 3. &quot;&quot;를 통해 입력컨트롤 클리어</para>
            <para>로직 : 5. 테이블 Readonly = false 설정</para>
            <para>로직 : 4. label Readonly 설정</para>
            <para>로직 : 6. if needReadOnly == true</para>
            <para>로직 : ----7. 테이블 readonly = true 설정</para>
            </summary>
            <param name="needReadOnly"></param>
        </member>
        <member name="M:StoreManage.UserControl2.readResultTablePattern">
            <summary>
            <para>기능 : 등록, 수정, 삭제시 테이블 리셋하기 위함</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. queryString과 Crud.ReadToGrid를 사용하여 검색된 개통일DataSet을 얻음</para>
            <para>로직 : 2. 컬럼명 한글로 변경</para>
            <para>로직 : 3. 체크박스 컬럼 추가</para>
            <para>로직 : 4. 필요한 컬럼 Readonly</para>
            <para>로직 : 5. 개통일 시간 제외 날짜까지만 출력</para>
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.resetToDefault">
            <summary>
            <para>기능 : 버튼 텍스트 초기화</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. 등록 버튼 텍스트 &quot;등록&quot;으로 적용</para>
            <para>로직 : 2. 변경 버튼 텍스트 &quot;변경&quot;으로 적용</para>
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.makeDetailTable(System.Boolean,System.Windows.Forms.DataGridViewCellEventArgs)">
            <summary>
            <para>기능 : 실적 상세 테이블 생성</para>
            <para>진입 : </para>
            <para>분기 : 1. needQuery == true</para>
            <para>로직 : 1. needQuery == true</para>
            <para>로직 : ----2. 선택된 개통번호 selectedUser_phone_number에 저장</para>
            <para>로직 : ----3. sqlQuery.SelectAllFrom_Where_와 Crud.Read를 사용하여 st_emp_result를 얻음</para>
            <para>로직 : ----4. sqlQuery.SelectAllFrom_Where_와 Crud.Read를 사용하여 user_t를 얻음</para>
            <para>로직 : ----5. sqlQuery.SelectAllFrom_Where_와 Crud.Read를 사용하여 st_table을 얻음</para>
            <para>로직 : ----6. 각 항목별 데이터 할당</para>
            <para>로직 : ----7. 각 항목 Readonly</para>
            <para>로직 : ----return</para>
            <para>로직 : 8. 빈 DataSet에 빈 DataTable 추가</para>
            <para>로직 : 9. tempFuncForWinform.setDataGridView</para>
            <para>로직 : 10. 기타 테이블 설정 적용</para>
            </summary>
            <param name="needQuery"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.changeDatagridViewDetailWritable">
            <summary>
            <para>기능 : 테이블 readonly 해제, label readonly 설정</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. 테이블 readonly = false</para>
            <para>로직 : 2. label readonly = true</para>
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.UserControl2_VisibleChanged(System.Object,System.EventArgs)">
            <summary>
            <para>기능 : 유저 컨트롤이 안보이게 됐을 때 저장된 데이터 클리어</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. 개통번호 = null</para>
            <para>로직 : 2. 체크된 실적 클리어</para>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:StoreManage.UserControl2.cellNotResultDisable">
            <summary>
            <para>기능 : 실적이 아닌 셀 readonly</para>
            <para>진입 : </para>
            <para>분기 : </para>
            <para>로직 : 1. 실적이 아닌 셀.readonly = true</para>
            </summary>
        </member>
        <member name="F:StoreManage.UserControl2.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:StoreManage.UserControl2.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:StoreManage.UserControl2.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마세요.
            </summary>
        </member>
        <member name="T:StoreManage.Properties.Resources">
            <summary>
              지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
            </summary>
        </member>
        <member name="P:StoreManage.Properties.Resources.ResourceManager">
            <summary>
              이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
            </summary>
        </member>
        <member name="P:StoreManage.Properties.Resources.Culture">
            <summary>
              이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해 현재 스레드의 CurrentUICulture 속성을
              재정의합니다.
            </summary>
        </member>
    </members>
</doc>
